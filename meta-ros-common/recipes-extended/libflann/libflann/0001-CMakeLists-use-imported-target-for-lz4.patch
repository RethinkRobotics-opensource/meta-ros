From 9064d886d9883e88d504879c0a61ca4134e1fa99 Mon Sep 17 00:00:00 2001
From: Matthias Schoepfer <m.schoepfer@rethinkrobotics.com>
Date: Fri, 2 Feb 2024 18:45:25 +0100
Subject: [PATCH 1/2] CMakeLists: use imported target for lz4

When cross-compiling, the host path of lz4 is leaked into the cmake
config file. We resort to [cmake magic](https://cmake.org/cmake/help/latest/module/FindPkgConfig.html#command:pkg_check_modules)
to import the target through pkg-config.

Signed-off-by: Matthias Schoepfer <m.schoepfer@rethinkrobotics.com>

Upstream-Status: Submitted (https://github.com/flann-lib/flann/pull/516)

---
 CMakeLists.txt          | 3 +--
 examples/CMakeLists.txt | 9 +++------
 src/cpp/CMakeLists.txt  | 8 ++++----
 3 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index f79d173..28955a5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -148,8 +148,7 @@ if (BUILD_CUDA_LIB)
 endif(BUILD_CUDA_LIB)
 
 find_package(PkgConfig REQUIRED)
-pkg_check_modules(LZ4 REQUIRED liblz4)
-include_directories(${LZ4_INCLUDE_DIRS})
+pkg_check_modules(LZ4 REQUIRED IMPORTED_TARGET liblz4)
 
 #set the C/C++ include path to the "include" directory
 include_directories(BEFORE ${PROJECT_SOURCE_DIR}/src/cpp)
diff --git a/examples/CMakeLists.txt b/examples/CMakeLists.txt
index a290773..e921deb 100644
--- a/examples/CMakeLists.txt
+++ b/examples/CMakeLists.txt
@@ -2,8 +2,7 @@ add_custom_target(examples ALL)
 
 if (BUILD_C_BINDINGS)
     add_executable(flann_example_c flann_example.c)
-    target_link_libraries(flann_example_c ${LZ4_LINK_LIBRARIES})
-    target_link_libraries(flann_example_c flann)
+    target_link_libraries(flann_example_c PkgConfig::LZ4 flann)
     set_target_properties(flann_example_c PROPERTIES COMPILE_FLAGS -std=c99)
 
     add_dependencies(examples flann_example_c)
@@ -14,8 +13,7 @@ if (HDF5_FOUND)
     include_directories(${HDF5_INCLUDE_DIR})
 
     add_executable(flann_example_cpp flann_example.cpp)
-    target_link_libraries(flann_example_cpp ${LZ4_LINK_LIBRARIES})
-    target_link_libraries(flann_example_cpp ${HDF5_LIBRARIES} flann_cpp)
+    target_link_libraries(flann_example_cpp PkgConfig::LZ4 ${HDF5_LIBRARIES} flann_cpp
     if (HDF5_IS_PARALLEL)
         target_link_libraries(flann_example_cpp ${MPI_LIBRARIES})
     endif()
@@ -26,8 +24,7 @@ if (HDF5_FOUND)
 
     if (USE_MPI AND HDF5_IS_PARALLEL)
         add_executable(flann_example_mpi flann_example_mpi.cpp)
-        target_link_libraries(flann_example_mpi ${LZ4_LINK_LIBRARIES})
-        target_link_libraries(flann_example_mpi flann_cpp ${HDF5_LIBRARIES} ${MPI_LIBRARIES} ${Boost_LIBRARIES})
+        target_link_libraries(flann_example_mpi PkgConfig::LZ4 flann_cpp ${HDF5_LIBRARIES} ${MPI_LIBRARIES} ${Boost_LIBRARIES})
 
         add_dependencies(examples flann_example_mpi)
         install (TARGETS flann_example_mpi DESTINATION bin)
diff --git a/src/cpp/CMakeLists.txt b/src/cpp/CMakeLists.txt
index 7603abc..3ebebc8 100644
--- a/src/cpp/CMakeLists.txt
+++ b/src/cpp/CMakeLists.txt
@@ -9,7 +9,7 @@ file(GLOB_RECURSE CPP_SOURCES flann_cpp.cpp)
 file(GLOB_RECURSE CU_SOURCES *.cu)
 
 add_library(flann_cpp_s STATIC ${CPP_SOURCES})
-target_link_libraries(flann_cpp_s PUBLIC ${LZ4_LINK_LIBRARIES})
+target_link_libraries(flann_cpp_s PUBLIC PkgConfig::LZ4)
 if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_CLANG)
     set_target_properties(flann_cpp_s PROPERTIES COMPILE_FLAGS -fPIC)
 endif()
@@ -20,7 +20,7 @@ else()
 endif()
 
 add_library(flann_cpp SHARED ${CPP_SOURCES})
-target_link_libraries(flann_cpp ${LZ4_LINK_LIBRARIES})
+target_link_libraries(flann_cpp PUBLIC PkgConfig::LZ4)
 # export lz4 headers, so that MSVC to creates flann_cpp.lib
 set_target_properties(flann_cpp PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS YES)
 
@@ -81,7 +81,7 @@ endif()
 
 if (BUILD_C_BINDINGS)
     add_library(flann_s STATIC ${C_SOURCES})
-    target_link_libraries(flann_s ${LZ4_LINK_LIBRARIES})
+    target_link_libraries(flann_s PUBLIC PkgConfig::LZ4)
     if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_CLANG)
         set_target_properties(flann_s PROPERTIES COMPILE_FLAGS -fPIC)
     endif()
@@ -93,7 +93,7 @@ if (BUILD_C_BINDINGS)
     endif()
 
     add_library(flann SHARED ${C_SOURCES})
-    target_link_libraries(flann ${LZ4_LINK_LIBRARIES})
+    target_link_libraries(flann PUBLIC PkgConfig::LZ4)
     list(APPEND flann_install_targets flann)
 
     if(MINGW AND OPENMP_FOUND)
-- 
2.43.0

