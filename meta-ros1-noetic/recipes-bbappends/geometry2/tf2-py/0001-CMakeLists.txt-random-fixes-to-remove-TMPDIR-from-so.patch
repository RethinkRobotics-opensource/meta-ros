From b58836e3a6ff569a939da515a2c566fafc178081 Mon Sep 17 00:00:00 2001
From: Matthias Schoepfer <m.schoepfer@rethinkrobotics.com>
Date: Fri, 10 Nov 2023 23:02:05 +0100
Subject: [PATCH] CMakeLists.txt: random fixes to remove TMPDIR from so

Probably more than was needed.

Upstream-Status: inappropriate (bad quality)

Signed-off-by: Matthias Schoepfer <m.schoepfer@rethinkrobotics.com>
---
 CMakeLists.txt | 107 +++++--------------------------------------------
 1 file changed, 11 insertions(+), 96 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index bb53f9d35..2efc8a454 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,41 +6,21 @@ project(tf2_py)
 ## is used, also find other catkin packages
 find_package(catkin REQUIRED COMPONENTS rospy tf2)
 
-## System dependencies are found with CMake's conventions
-# find_package(Boost REQUIRED COMPONENTS system)
+
+find_package(Python3 COMPONENTS Development)
+
+SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE)
+SET(CMAKE_SKIP_BUILD_RPATH TRUE)
+SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
+set(CMAKE_INSTALL_RPATH "$ORIGIN/../${CMAKE_INSTALL_LIBDIR}")
 
 
-find_package(PythonLibs 2 REQUIRED)
-include_directories(${PYTHON_INCLUDE_PATH} ${catkin_INCLUDE_DIRS})
 
 ## Uncomment this if the package has a setup.py. This macro ensures
 ## modules and global scripts declared therein get installed
 ## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
 catkin_python_setup()
 
-#######################################
-## Declare ROS messages and services ##
-#######################################
-
-## Generate messages in the 'msg' folder
-# add_message_files(
-#   FILES
-#   Message1.msg
-#   Message2.msg
-# )
-
-## Generate services in the 'srv' folder
-# add_service_files(
-#   FILES
-#   Service1.srv
-#   Service2.srv
-# )
-
-## Generate added messages and services with any dependencies listed here
-# generate_messages(
-#   DEPENDENCIES
-#   std_msgs  # Or other packages containing msgs
-# )
 
 ###################################
 ## catkin specific configuration ##
@@ -61,44 +41,22 @@ catkin_package(
 ## Build ##
 ###########
 
-## Specify additional locations of header files
-## Your package locations should be listed before other locations
-# include_directories(include ${catkin_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
-
-## Declare a cpp library
-# add_library(tf2_py
-#   src/${PROJECT_NAME}/tf2_py.cpp
-# )
-
-## Declare a cpp executable
-# add_executable(tf2_py_node src/tf2_py_node.cpp)
-
-## Add cmake target dependencies of the executable/library
-## as an example, message headers may need to be generated before nodes
-# add_dependencies(tf2_py_node tf2_py_generate_messages_cpp)
-
-## Specify libraries to link a library or executable target against
-# target_link_libraries(tf2_py_node
-#   ${catkin_LIBRARIES}
-# )
-
 
 # Check for SSE
 #!!! rosbuild_check_for_sse()
 
+message(WARNING "exported: ${catkin_EXPORTED_TARGETS}")
 # Dynamic linking with tf worked OK, except for exception propagation, which failed in the unit test.
 # so build with the objects directly instead.
-
-link_libraries(${PYTHON_LIBRARIES})
 add_library(tf2_py src/tf2_py.cpp)
-target_link_libraries(tf2_py ${catkin_LIBRARIES})
+target_link_libraries(tf2_py PRIVATE ${catkin_LIBRARIES} Python3::Python)
 add_dependencies(tf2_py ${catkin_EXPORTED_TARGETS})
-
+target_include_directories(tf2_py PRIVATE ${catkin_INCLUDE_DIRS})
 if(WIN32)
   # use .pyd extension on Windows
   set_target_properties(tf2_py PROPERTIES OUTPUT_NAME "_tf2" SUFFIX ".pyd")
 else()
-  set_target_properties(tf2_py PROPERTIES COMPILE_FLAGS "-g -Wno-missing-field-initializers")
+  set_target_properties(tf2_py PROPERTIES COMPILE_FLAGS "-Wno-missing-field-initializers")
   set_target_properties(tf2_py PROPERTIES OUTPUT_NAME tf2 PREFIX "_" SUFFIX ".so")
 endif()
 set_target_properties(tf2_py PROPERTIES
@@ -113,50 +71,7 @@ set_target_properties(tf2_py PROPERTIES
 ## Install ##
 #############
 
-# all install targets should use catkin DESTINATION variables
-# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html
-
-## Mark executable scripts (Python etc.) for installation
-## in contrast to setup.py, you can choose the destination
-# install(PROGRAMS
-#   scripts/my_python_script
-#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
-# )
-
-## Mark executables and/or libraries for installation
-# install(TARGETS tf2_py tf2_py_node
-#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
-#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
-#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
-# )
-
-## Mark cpp header files for installation
-# install(DIRECTORY include/${PROJECT_NAME}/
-#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
-#   FILES_MATCHING PATTERN "*.h"
-#   PATTERN ".svn" EXCLUDE
-# )
-
-## Mark other files for installation (e.g. launch and bag files, etc.)
-# install(FILES
-#   # myfile1
-#   # myfile2
-#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
-# )
 
 install(FILES $<TARGET_FILE:tf2_py>
     DESTINATION ${CATKIN_PACKAGE_PYTHON_DESTINATION}
 )
-
-#############
-## Testing ##
-#############
-
-## Add gtest based cpp test target and link libraries
-# catkin_add_gtest(${PROJECT_NAME}-test test/test_tf2_py.cpp)
-# if(TARGET ${PROJECT_NAME}-test)
-#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
-# endif()
-
-## Add folders to be run by python nosetests
-# catkin_add_nosetests(test)
-- 
2.41.0

